EnchantoriumGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Test
      DefinitionBody:
        swagger: "2.0"
        info:
          title: EnchantoriumAPI
          version: "1.0"
        paths:
          /user:
            post:
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateUserFunction.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws_proxy"
              responses: {}
            get:
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetUserFunction.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "GET"
                type: "aws_proxy"
              responses: {}
            put:
              x-amazon-apigateway-integration:
                  uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutUserFunction.Arn}/invocations"
                  passthroughBehavior: "when_no_match"
                  httpMethod: "PUT"
                  type: "aws_proxy"
              responses: {}
          /user/{id}:
            delete:
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteUserFunction.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "DELETE"
                type: "aws_proxy"
              responses: {}
          /creature:
            post:
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateCreatureFunction.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws_proxy"
              responses: {}
            get:
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetCreatureFunction.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "GET"
                type: "aws_proxy"
              responses: {}
            put:
              x-amazon-apigateway-integration:
                  uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutCreatureFunction.Arn}/invocations"
                  passthroughBehavior: "when_no_match"
                  httpMethod: "PUT"
                  type: "aws_proxy"
              responses: {}
          /creature/{id}:
            delete:
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteCreatureFunction.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "DELETE"
                type: "aws_proxy"
              responses: {}
          /weapon:
            post:
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateWeaponFunction.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "POST"
                type: "aws_proxy"
              responses: {}
            get:
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetWeaponFunction.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "GET"
                type: "aws_proxy"
              responses: {}
            put:
              x-amazon-apigateway-integration:
                  uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PutWeaponFunction.Arn}/invocations"
                  passthroughBehavior: "when_no_match"
                  httpMethod: "PUT"
                  type: "aws_proxy"
              responses: {}
          /weapon/{id}:
            delete:
              x-amazon-apigateway-integration:
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteWeaponFunction.Arn}/invocations"
                passthroughBehavior: "when_no_match"
                httpMethod: "DELETE"
                type: "aws_proxy"
              responses: {}
