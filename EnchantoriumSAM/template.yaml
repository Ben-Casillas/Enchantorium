AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  EnchantoriumSAM

  Sample SAM Template for EnchantoriumSAM

Globals:
  Function:
    Timeout: 3
    MemorySize: 128

  Api:
    Cors:
      AllowMethods: "'GET,POST,DELETE,PUT,OPTIONS'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'*'"

Resources:
# User
  CreateUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Enchantorium_v1/user/post_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Enchantorium_Users
    Events:
      CreateUser:
        Type: Api
        Properties:
          Path: /user
          Method: post

  GetUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Enchantorium_v1/user/get_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Enchantorium_Users
    Events:
      CreateUser:
        Type: Api
        Properties:
          Path: /user
          Method: get

  PutUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Enchantorium_v1/user/put_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Enchantorium_Users
    Events:
      CreateUser:
        Type: Api
        Properties:
          Path: /user
          Method: put

  DeleteUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Enchantorium_v1/user/delete_user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Enchantorium_Users
    Events:
      CreateUser:
        Type: Api
        Properties:
          Path: /user
          Method: delete

# Creature
  CreateCreatureFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Enchantorium_v1/creature/post_creature/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Enchantorium_Creatures
    Events:
      CreateCreature:
        Type: Api
        Properties:
          Path: /creature
          Method: post

  GetCreatureFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Enchantorium_v1/creature/get_creature/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Enchantorium_Creatures
    Events:
      CreateCreature:
        Type: Api
        Properties:
          Path: /creature
          Method: get

  PutCreatureFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Enchantorium_v1/creature/put_creature/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Enchantorium_Creatures
    Events:
      CreateCreature:
        Type: Api
        Properties:
          Path: /creature
          Method: put

  DeleteCreatureFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Enchantorium_v1/creature/delete_creature/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Enchantorium_Creatures
    Events:
      CreateCreature:
        Type: Api
        Properties:
          Path: /creature
          Method: delete
  
# Weapon
  CreateWeaponFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Enchantorium_v1/weapon/post_weapon/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Enchantorium_Weapons
    Events:
      CreateWeapon:
        Type: Api
        Properties:
          Path: /weapon
          Method: post

  GetWeaponFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Enchantorium_v1/weapon/get_weapon/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Enchantorium_Weapons
    Events:
      CreateWeapon:
        Type: Api
        Properties:
          Path: /weapon
          Method: get

  PutWeaponFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Enchantorium_v1/weapon/put_weapon/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Enchantorium_Weapons
    Events:
      CreateWeapon:
        Type: Api
        Properties:
          Path: /weapon
          Method: put

  DeleteWeaponFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../Enchantorium_v1/weapon/delete_weapon/
      Handler: app.lambda_handler
      Runtime: python3.12
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Enchantorium_Weapons
    Events:
      CreateWeapon:
        Type: Api
        Properties:
          Path: /weapon
          Method: delete